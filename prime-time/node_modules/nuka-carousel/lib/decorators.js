"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var _default = [{
  component:
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(component, _React$Component);

    function component() {
      var _ref;

      var _temp, _this;

      _classCallCheck(this, component);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_ref = component.__proto__ || Object.getPrototypeOf(component)).call.apply(_ref, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this), "handleClick", {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function value(e) {
          e.preventDefault();

          _this.props.previousSlide();
        }
      }), Object.defineProperty(_assertThisInitialized(_this), "getButtonStyles", {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function value(disabled) {
          return {
            border: 0,
            background: 'rgba(0,0,0,0.4)',
            color: 'white',
            padding: 10,
            outline: 0,
            opacity: disabled ? 0.3 : 1,
            cursor: 'pointer'
          };
        }
      }), _temp));
    }

    _createClass(component, [{
      key: "render",
      value: function render() {
        return _react.default.createElement("button", {
          style: this.getButtonStyles(this.props.currentSlide === 0 && !this.props.wrapAround),
          onClick: this.handleClick
        }, "PREV");
      }
    }]);

    return component;
  }(_react.default.Component),
  position: 'CenterLeft'
}, {
  component:
  /*#__PURE__*/
  function (_React$Component2) {
    _inherits(component, _React$Component2);

    function component() {
      var _ref2;

      var _temp2, _this2;

      _classCallCheck(this, component);

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _possibleConstructorReturn(_this2, (_temp2 = _this2 = _possibleConstructorReturn(this, (_ref2 = component.__proto__ || Object.getPrototypeOf(component)).call.apply(_ref2, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this2), "handleClick", {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function value(e) {
          e.preventDefault();

          _this2.props.nextSlide();
        }
      }), Object.defineProperty(_assertThisInitialized(_this2), "getButtonStyles", {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function value(disabled) {
          return {
            border: 0,
            background: 'rgba(0,0,0,0.4)',
            color: 'white',
            padding: 10,
            outline: 0,
            opacity: disabled ? 0.3 : 1,
            cursor: 'pointer'
          };
        }
      }), _temp2));
    }

    _createClass(component, [{
      key: "render",
      value: function render() {
        return _react.default.createElement("button", {
          style: this.getButtonStyles(this.props.currentSlide + this.props.slidesToScroll >= this.props.slideCount && !this.props.wrapAround),
          onClick: this.handleClick
        }, "NEXT");
      }
    }]);

    return component;
  }(_react.default.Component),
  position: 'CenterRight'
}, {
  component:
  /*#__PURE__*/
  function (_React$Component3) {
    _inherits(component, _React$Component3);

    function component() {
      var _ref3;

      var _temp3, _this3;

      _classCallCheck(this, component);

      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return _possibleConstructorReturn(_this3, (_temp3 = _this3 = _possibleConstructorReturn(this, (_ref3 = component.__proto__ || Object.getPrototypeOf(component)).call.apply(_ref3, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this3), "getIndexes", {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function value(count, inc) {
          var arr = [];

          for (var i = 0; i < count; i += inc) {
            arr.push(i);
          }

          return arr;
        }
      }), Object.defineProperty(_assertThisInitialized(_this3), "getListStyles", {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function value() {
          return {
            position: 'relative',
            margin: 0,
            top: -10,
            padding: 0
          };
        }
      }), Object.defineProperty(_assertThisInitialized(_this3), "getListItemStyles", {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function value() {
          return {
            listStyleType: 'none',
            display: 'inline-block'
          };
        }
      }), Object.defineProperty(_assertThisInitialized(_this3), "getButtonStyles", {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function value(active) {
          return {
            border: 0,
            background: 'transparent',
            color: 'black',
            cursor: 'pointer',
            padding: 10,
            outline: 0,
            fontSize: 24,
            opacity: active ? 1 : 0.5
          };
        }
      }), _temp3));
    }

    _createClass(component, [{
      key: "render",
      value: function render() {
        var _this4 = this;

        var indexes = this.getIndexes(this.props.slideCount, this.props.slidesToScroll);
        return _react.default.createElement("ul", {
          style: this.getListStyles()
        }, indexes.map(function (index) {
          return _react.default.createElement("li", {
            style: _this4.getListItemStyles(),
            key: index
          }, _react.default.createElement("button", {
            style: _this4.getButtonStyles(_this4.props.currentSlide === index),
            onClick: _this4.props.goToSlide.bind(null, index)
          }, "\u2022"));
        }));
      }
    }]);

    return component;
  }(_react.default.Component),
  position: 'BottomCenter'
}];
exports.default = _default;